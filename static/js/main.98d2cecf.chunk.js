(this.webpackJsonpmywebpage=this.webpackJsonpmywebpage||[]).push([[0],{216:function(e,n,t){e.exports=t(629)},351:function(e,n,t){},352:function(e,n,t){e.exports=t.p+"static/media/bg_img_3.c78e1161.jpg"},353:function(e,n,t){e.exports=t.p+"static/media/profile_img.c85ad71a.jpg"},626:function(e,n,t){e.exports=t.p+"static/media/problem.5b9f2e97.png"},627:function(e,n,t){e.exports=t.p+"static/media/init_problem.d1eca653.png"},628:function(e,n,t){e.exports=t.p+"static/media/results.bdc62726.png"},629:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),i=t(40),r=t.n(i),m=t(62),c=t(35),o=t(641),s=t(639),p=function(){return l.a.createElement(o.a,{pointing:!0,secondary:!0},l.a.createElement(m.b,{to:"/",className:"item"},"Home"),l.a.createElement(s.a,{item:!0,text:"Notes"},l.a.createElement(s.a.Menu,null,l.a.createElement(s.a,{item:!0,text:"Teaching"},l.a.createElement(s.a.Menu,null,l.a.createElement(s.a.Item,null,l.a.createElement(m.b,{to:"/rn",className:"item"},"Interior point method example")))))))},x=t(205),u=(t(351),function(){return l.a.createElement("div",{className:"ui grid"},l.a.createElement("div",{className:"row"},l.a.createElement("img",{alt:"background",src:t(352)})),l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"ui column stackable grid"},l.a.createElement("div",{className:"three wide column"},l.a.createElement(x.a,{src:t(353),size:"small",circular:!0})),l.a.createElement("div",{className:"five wide column"},l.a.createElement("h2",null,"Jos\xe9 Manuel Vera"),l.a.createElement("h5",null,"Facultad de Ciencias Naturales y Matem\xe1tica"),l.a.createElement("p",null,"Ingenier\xeda en Log\xedstica y Transporte"),l.a.createElement("p",null,l.a.createElement("i",{className:"envelope icon"}),"jomavera@espol.edu.ec"),l.a.createElement("p",null,l.a.createElement("i",{className:"github icon"}),"github.com/jomavera")))))}),d=t(25),g=t.n(d),E=t(32),_=t.n(E),y=t(640),b=t(637),f=function(){return l.a.createElement("div",null,l.a.createElement(g.a,{source:"# Interior point method example \n ### We must solve the following linearization of the conditions derived in the barrier problem."}),l.a.createElement(_.a.Provider,null,l.a.createElement("div",null,l.a.createElement(_.a.Node,{formula:"\\begin{aligned}\n\\mu X^{-2}\\textbf{d}_x + \\textbf{d}_s = \\mu X^{-1}\\textbf{1}-\\textbf{c} \\hspace{2cm} (1) \\newline\nA\\textbf{d}_x = \\textbf{0} \\hspace{2cm} (2) \\newline\n-A^T\\textbf{d}_y-\\textbf{d}_s=\\textbf{0} \\hspace{2cm} (3) \\newline\n(AX^2A^T)\\textbf{d}_y = - \\mu AX\\textbf{1}+AX^2\\textbf{c} \\hspace{2cm} (4) \\newline\n\\end{aligned}"}))),l.a.createElement("div",{className:"ui horizontal divider"},"Example"),l.a.createElement(g.a,{source:"### Given the following LP"}),l.a.createElement(_.a.Provider,null,l.a.createElement("div",null,l.a.createElement(_.a.Node,{formula:"\\begin{gather*} \\min\\quad -x_1 - 4x_2\\newline \\begin{aligned} s.a. 2x_1 - x_2 &\\geq  0\\newline x_1 - 3x_2  &\\leq  0 \\newline x_1 +  x_2  &\\leq  4 \\newline \\quad x_1, x_2  & \\geq  0 \\newline \\end{aligned} \\end{gather*}"}))),l.a.createElement(g.a,{source:"### We have the following polyhedron"}),l.a.createElement("div",{className:"ui mini message"},l.a.createElement(y.a,{language:"python",style:b.a},"import numpy as np \nimport matplotlib.pyplot as plt \n \nx  = np.linspace(0, 4, 100) \ny1 = 2*x \ny2 = x/3 \n y3 = 4 - x \nplt.figure(figsize=(8, 6)) \nplt.plot(x, y1) \nplt.plot(x, y2) \nplt.plot(x, y3) \nplt.xlim((0, 3.5)) \nplt.ylim((0, 4)) \nplt.xlabel('x1') \nplt.ylabel('x2') \ny5 = np.minimum(y1, y3) \nplt.fill_between(x[:-25], y2[:-25], y5[:-25], color='red', alpha=0.5)")),l.a.createElement(x.a,{src:t(626),size:"big",centered:!0}),l.a.createElement(g.a,{source:"### If we put the LP in standard form we have five variables."}),l.a.createElement(_.a.Provider,null,l.a.createElement("div",null,l.a.createElement(_.a.Node,{formula:"\\begin{gather*}\n\\min \\quad -x_1 - 4x_2\\newline\n\\begin{aligned}\ns.a.\n2x_1 - x_2 -x_3  &=  0\\newline\nx_1 - 3x_2 +x_4  &=  0 \\newline\nx_1 +  x_2+x_5  &= 4 \\newline        \n\\quad x_1, x_2, x_3, x_4, x_5  & \\geq  0 \\newline\n\\end{aligned}\n\\end{gather*}"}))),l.a.createElement(g.a,{source:"### We see that (x_1,x_2)=(1,1) is a interior point thus, we choose it as initial point x_0. The vector and matrix A will be as follows "}),l.a.createElement(_.a.Provider,null,l.a.createElement("div",null,l.a.createElement(_.a.Node,{formula:"\\textbf{x}=\\begin{bmatrix}1\\newline 1\\newline 1\\newline 2\\newline 2\\end{bmatrix}\nA= \\begin{bmatrix}2& -1 & -1 & 0 & 0\\newline\n1& -3 & 0 & 1 & 0\\newline\n1 & 1 & 0 & 0 & 1\\newline\n\\end{bmatrix}"}))),l.a.createElement(g.a,{source:"### The initial vecto will have a initial Solution z=-5 "}),l.a.createElement("div",{className:"ui mini message"},l.a.createElement(y.a,{language:"python",style:b.a},"x = np.linspace(0, 4, 100) \ny1 = 2*x \ny2 = x/3 \ny3 = 4 - x \nplt.figure(figsize=(8, 6)) \nplt.plot(x, y1) \nplt.plot(x, y2) \nplt.plot(x, y3) \nplt.xlim((0, 3.5)) \nplt.ylim((0, 4)) \nplt.xlabel('x1') \nplt.ylabel('x2') \ny5 = np.minimum(y1, y3) \nplt.fill_between(x[:-25], y2[:-25], y5[:-25], color='red', alpha=0.5) \nplt.scatter([1],[1],color='black') \nplt.annotate('x_0',(1.05,1.05))")),l.a.createElement(x.a,{src:t(627),size:"big",centered:!0}),l.a.createElement(g.a,{source:"###Function to run n iterations of interior point method"}),l.a.createElement("div",{className:"ui mini message"},l.a.createElement(y.a,{language:"python",style:b.a},"def interior_point_2D(A,c, x_init,mu, gamma,n_iter): \n  x = x_init \n  x1s      = [] #Empty list to save x_1's \n  x2s      = [] #Empty list to save x_2's \n  x1s.append(x[0,0]) \n  x2s.append(x[1,0]) \n  n= A.shape[1] \n  X= np.zeros((n,n)) \n \n  for iteracion in range(n_iter): \n \n      for i in range(n): \n         X[i,i] = x[i,0] \n \n      #SOLVE EQUATION 4 \n      left_ec_4 = np.matmul( A, np.matmul( np.power(X,2),A.T ) ) \n      #                     -mu*A*X*1                       +       AX^2c \n      right_ec_4 = -mu*np.matmul( A,np.matmul( X,vector_1 ) ) + np.matmul( A,np.matmul( np.power(X,2),c ) ) \n      dy = np.linalg.solve(left_ec_4, right_ec_4) \n \n      #SOLVE EQUATION 3 \n \n      ds = np.matmul(-1*A.T,dy) #ds=-A^T*dy \n \n      #SOLVE EQUATION 1 \n \n      left_ec_1 = mu*np.power(np.linalg.inv(X),2) #mu*X^-2 \n \n      right_ec_1 = mu*np.matmul(np.linalg.inv(X),vector_1)-c-ds #mu*X^-1*1-c-ds \n \n      dx       = np.linalg.solve(left_ec_1,right_ec_1) \n      #UPDATE vector x \n \n      x  = x + dx \n      mu = mu*gamma \n      x1s.append( x[0,0] ) \n      x2s.append( x[1,0] ) \n      return x1s, x2s")),l.a.createElement(g.a,{source:"### Running function for 100 iterations on problem"}),l.a.createElement("div",{className:"ui mini message"},l.a.createElement(y.a,{language:"python",style:b.a},"mu       = 100 \ngamma    = 0.8 \nA        = np.array([[2,-1,-1,0,0],[1,-3,0,1,0],[1,1,0,0,1]]) \nvector_1 = np.ones((5,1)) \nc        = np.array([[-1],[-4],[0],[0],[0]]) \nx        = np.array([[1],[1],[1],[2],[2]]) #Initial point \nx1s, x2s = interior_point(A,c, x,mu, gamma,100)")),l.a.createElement(g.a,{source:"### Plotting all the iterations"}),l.a.createElement("div",{className:"ui mini message"},l.a.createElement(y.a,{language:"python",style:b.a},"x  = np.linspace(0, 4, 100) \ny1 = 2*x \ny2 = x/3 \ny3 = 4 - x \nplt.figure(figsize=(8, 6)) \nplt.plot(x, y1) \nplt.plot(x, y2) \nplt.plot(x, y3) \nplt.xlim((0, 3.5)) \nplt.ylim((0, 4)) \nplt.xlabel('x1') \nplt.ylabel('x2') \ny5 = \nnp.minimum(y1, y3) \nplt.fill_between(x[:-25], y2[:-25], y5[:-25], color='red', alpha=0.5) \n \n for iteracion in range(100): \n  plt.scatter(x1s[iteracion],x2s[iteracion],color='black') \n  if iteracion % 10 == 0: \n    nombre = 'x_'+str(iteracion) \n    plt.annotate(nombre,(x1s[iteracion]+0.05,x2s[iteracion]+0.05))")),l.a.createElement(x.a,{src:t(628),size:"big",centered:!0}))},h=function(){return l.a.createElement("div",null,l.a.createElement(m.a,null,l.a.createElement("div",{className:"ui container"},l.a.createElement(p,null),l.a.createElement(c.a,{path:"/",exact:!0,component:u}),l.a.createElement(c.a,{path:"/rn",exact:!0,component:f}))))};r.a.render(l.a.createElement(h,null),document.querySelector("#root"))}},[[216,1,2]]]);
//# sourceMappingURL=main.98d2cecf.chunk.js.map